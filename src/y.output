State 37 conflicts: 1 shift/reduce
State 118 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: body

    2 string: tSTRING
    3       | tSTRING '+' tSTRING

    4 function: head body tail

    5 head: tFUNC tIDENTIFIER '(' par_decl_list ')' ':' type

    6 tail: tEND tIDENTIFIER

    7 type: tIDENTIFIER
    8     | tINT
    9     | tBOOL
   10     | tSTRING_TOKEN
   11     | tARRAY tOF type
   12     | tRECORD tOF '{' var_decl_list '}'

   13 par_decl_list: var_decl_list
   14              | %empty

   15 var_decl_list: var_type ',' var_decl_list
   16              | var_type

   17 var_type: tIDENTIFIER ':' type

   18 body: decl_list statement_list

   19 decl_list: declaration decl_list
   20          | %empty

   21 declaration: tTYPE tIDENTIFIER '=' type ';'
   22            | function
   23            | tVAR var_decl_list ';'

   24 statement_list: statement
   25               | statement statement_list

   26 statement: tRETURN exp ';'
   27          | tWRITE exp ';'
   28          | tALLOCATE variable ';'
   29          | tALLOCATE variable tOF tLENGTH exp ';'
   30          | variable '=' exp ';'
   31          | tIF exp tTHEN statement
   32          | tIF exp tTHEN statement tELSE statement
   33          | tWHILE exp tDO statement
   34          | '{' statement_list '}'

   35 variable: tIDENTIFIER
   36         | variable '[' exp ']'
   37         | variable '.' tIDENTIFIER

   38 exp: exp '*' exp
   39    | exp '/' exp
   40    | exp '+' exp
   41    | exp '-' exp
   42    | exp tEQUALITY exp
   43    | exp tOR exp
   44    | exp tAND exp
   45    | exp tNON_EQUALITY exp
   46    | exp tGREATER_EQUAL exp
   47    | exp tLESSER_EQUAL exp
   48    | exp '>' exp
   49    | exp '<' exp
   50    | term

   51 term: variable
   52     | tIDENTIFIER '(' act_list ')'
   53     | '(' exp ')'
   54     | '!' term
   55     | '|' exp '|'
   56     | tINTCONST
   57     | tTRUE
   58     | tFALSE
   59     | tNULL
   60     | string

   61 act_list: exp_list
   62         | %empty

   63 exp_list: exp
   64         | exp ',' exp_list


Terminals, with rules where they appear

$end (0) 0
'!' (33) 54
'(' (40) 5 52 53
')' (41) 5 52 53
'*' (42) 38
'+' (43) 3 40
',' (44) 15 64
'-' (45) 41
'.' (46) 37
'/' (47) 39
':' (58) 5 17
';' (59) 21 23 26 27 28 29 30
'<' (60) 49
'=' (61) 21 30
'>' (62) 48
'[' (91) 36
']' (93) 36
'{' (123) 12 34
'|' (124) 55
'}' (125) 12 34
error (256)
tINTCONST (258) 56
tIDENTIFIER (259) 5 6 7 17 21 35 37 52
tSTRING (260) 2 3
tEQUALITY (261) 42
tLESSER_EQUAL (262) 47
tGREATER_EQUAL (263) 46
tNON_EQUALITY (264) 45
tAND (265) 44
tOR (266) 43
tRETURN (267) 26
tWRITE (268) 27
tIF (269) 31 32
tELSE (270) 32
tTHEN (271) 31 32
tALLOCATE (272) 28 29
tWHILE (273) 33
tDO (274) 33
tBOOL (275) 9
tARRAY (276) 11
tOF (277) 11 12 29
tTRUE (278) 57
tFALSE (279) 58
tNULL (280) 59
tTYPE (281) 21
tINT (282) 8
tFUNC (283) 5
tEND (284) 6
tVAR (285) 23
tLENGTH (286) 29
tRECORD (287) 12
tSTRING_TOKEN (288) 10


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1, on right: 0
string (55)
    on left: 2 3, on right: 60
function (56)
    on left: 4, on right: 22
head (57)
    on left: 5, on right: 4
tail (58)
    on left: 6, on right: 4
type (59)
    on left: 7 8 9 10 11 12, on right: 5 11 17 21
par_decl_list (60)
    on left: 13 14, on right: 5
var_decl_list (61)
    on left: 15 16, on right: 12 13 15 23
var_type (62)
    on left: 17, on right: 15 16
body (63)
    on left: 18, on right: 1 4
decl_list (64)
    on left: 19 20, on right: 18 19
declaration (65)
    on left: 21 22 23, on right: 19
statement_list (66)
    on left: 24 25, on right: 18 25 34
statement (67)
    on left: 26 27 28 29 30 31 32 33 34, on right: 24 25 31 32 33
variable (68)
    on left: 35 36 37, on right: 28 29 30 36 37 51
exp (69)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49 50, on right: 26 27
    29 30 31 32 33 36 38 39 40 41 42 43 44 45 46 47 48 49 53 55 63
    64
term (70)
    on left: 51 52 53 54 55 56 57 58 59 60, on right: 50 54
act_list (71)
    on left: 61 62, on right: 52
exp_list (72)
    on left: 63 64, on right: 61 64


State 0

    0 $accept: . program $end

    tTYPE  shift, and go to state 1
    tFUNC  shift, and go to state 2
    tVAR   shift, and go to state 3

    $default  reduce using rule 20 (decl_list)

    program      go to state 4
    function     go to state 5
    head         go to state 6
    body         go to state 7
    decl_list    go to state 8
    declaration  go to state 9


State 1

   21 declaration: tTYPE . tIDENTIFIER '=' type ';'

    tIDENTIFIER  shift, and go to state 10


State 2

    5 head: tFUNC . tIDENTIFIER '(' par_decl_list ')' ':' type

    tIDENTIFIER  shift, and go to state 11


State 3

   23 declaration: tVAR . var_decl_list ';'

    tIDENTIFIER  shift, and go to state 12

    var_decl_list  go to state 13
    var_type       go to state 14


State 4

    0 $accept: program . $end

    $end  shift, and go to state 15


State 5

   22 declaration: function .

    $default  reduce using rule 22 (declaration)


State 6

    4 function: head . body tail

    tTYPE  shift, and go to state 1
    tFUNC  shift, and go to state 2
    tVAR   shift, and go to state 3

    $default  reduce using rule 20 (decl_list)

    function     go to state 5
    head         go to state 6
    body         go to state 16
    decl_list    go to state 8
    declaration  go to state 9


State 7

    1 program: body .

    $default  reduce using rule 1 (program)


State 8

   18 body: decl_list . statement_list

    tIDENTIFIER  shift, and go to state 17
    tRETURN      shift, and go to state 18
    tWRITE       shift, and go to state 19
    tIF          shift, and go to state 20
    tALLOCATE    shift, and go to state 21
    tWHILE       shift, and go to state 22
    '{'          shift, and go to state 23

    statement_list  go to state 24
    statement       go to state 25
    variable        go to state 26


State 9

   19 decl_list: declaration . decl_list

    tTYPE  shift, and go to state 1
    tFUNC  shift, and go to state 2
    tVAR   shift, and go to state 3

    $default  reduce using rule 20 (decl_list)

    function     go to state 5
    head         go to state 6
    decl_list    go to state 27
    declaration  go to state 9


State 10

   21 declaration: tTYPE tIDENTIFIER . '=' type ';'

    '='  shift, and go to state 28


State 11

    5 head: tFUNC tIDENTIFIER . '(' par_decl_list ')' ':' type

    '('  shift, and go to state 29


State 12

   17 var_type: tIDENTIFIER . ':' type

    ':'  shift, and go to state 30


State 13

   23 declaration: tVAR var_decl_list . ';'

    ';'  shift, and go to state 31


State 14

   15 var_decl_list: var_type . ',' var_decl_list
   16              | var_type .

    ','  shift, and go to state 32

    $default  reduce using rule 16 (var_decl_list)


State 15

    0 $accept: program $end .

    $default  accept


State 16

    4 function: head body . tail

    tEND  shift, and go to state 33

    tail  go to state 34


State 17

   35 variable: tIDENTIFIER .

    $default  reduce using rule 35 (variable)


State 18

   26 statement: tRETURN . exp ';'

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 46
    term      go to state 47


State 19

   27 statement: tWRITE . exp ';'

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 48
    term      go to state 47


State 20

   31 statement: tIF . exp tTHEN statement
   32          | tIF . exp tTHEN statement tELSE statement

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 49
    term      go to state 47


State 21

   28 statement: tALLOCATE . variable ';'
   29          | tALLOCATE . variable tOF tLENGTH exp ';'

    tIDENTIFIER  shift, and go to state 17

    variable  go to state 50


State 22

   33 statement: tWHILE . exp tDO statement

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 51
    term      go to state 47


State 23

   34 statement: '{' . statement_list '}'

    tIDENTIFIER  shift, and go to state 17
    tRETURN      shift, and go to state 18
    tWRITE       shift, and go to state 19
    tIF          shift, and go to state 20
    tALLOCATE    shift, and go to state 21
    tWHILE       shift, and go to state 22
    '{'          shift, and go to state 23

    statement_list  go to state 52
    statement       go to state 25
    variable        go to state 26


State 24

   18 body: decl_list statement_list .

    $default  reduce using rule 18 (body)


State 25

   24 statement_list: statement .
   25               | statement . statement_list

    tIDENTIFIER  shift, and go to state 17
    tRETURN      shift, and go to state 18
    tWRITE       shift, and go to state 19
    tIF          shift, and go to state 20
    tALLOCATE    shift, and go to state 21
    tWHILE       shift, and go to state 22
    '{'          shift, and go to state 23

    $default  reduce using rule 24 (statement_list)

    statement_list  go to state 53
    statement       go to state 25
    variable        go to state 26


State 26

   30 statement: variable . '=' exp ';'
   36 variable: variable . '[' exp ']'
   37         | variable . '.' tIDENTIFIER

    '='  shift, and go to state 54
    '['  shift, and go to state 55
    '.'  shift, and go to state 56


State 27

   19 decl_list: declaration decl_list .

    $default  reduce using rule 19 (decl_list)


State 28

   21 declaration: tTYPE tIDENTIFIER '=' . type ';'

    tIDENTIFIER    shift, and go to state 57
    tBOOL          shift, and go to state 58
    tARRAY         shift, and go to state 59
    tINT           shift, and go to state 60
    tRECORD        shift, and go to state 61
    tSTRING_TOKEN  shift, and go to state 62

    type  go to state 63


State 29

    5 head: tFUNC tIDENTIFIER '(' . par_decl_list ')' ':' type

    tIDENTIFIER  shift, and go to state 12

    $default  reduce using rule 14 (par_decl_list)

    par_decl_list  go to state 64
    var_decl_list  go to state 65
    var_type       go to state 14


State 30

   17 var_type: tIDENTIFIER ':' . type

    tIDENTIFIER    shift, and go to state 57
    tBOOL          shift, and go to state 58
    tARRAY         shift, and go to state 59
    tINT           shift, and go to state 60
    tRECORD        shift, and go to state 61
    tSTRING_TOKEN  shift, and go to state 62

    type  go to state 66


State 31

   23 declaration: tVAR var_decl_list ';' .

    $default  reduce using rule 23 (declaration)


State 32

   15 var_decl_list: var_type ',' . var_decl_list

    tIDENTIFIER  shift, and go to state 12

    var_decl_list  go to state 67
    var_type       go to state 14


State 33

    6 tail: tEND . tIDENTIFIER

    tIDENTIFIER  shift, and go to state 68


State 34

    4 function: head body tail .

    $default  reduce using rule 4 (function)


State 35

   56 term: tINTCONST .

    $default  reduce using rule 56 (term)


State 36

   35 variable: tIDENTIFIER .
   52 term: tIDENTIFIER . '(' act_list ')'

    '('  shift, and go to state 69

    $default  reduce using rule 35 (variable)


State 37

    2 string: tSTRING .
    3       | tSTRING . '+' tSTRING

    '+'  shift, and go to state 70

    '+'       [reduce using rule 2 (string)]
    $default  reduce using rule 2 (string)


State 38

   57 term: tTRUE .

    $default  reduce using rule 57 (term)


State 39

   58 term: tFALSE .

    $default  reduce using rule 58 (term)


State 40

   59 term: tNULL .

    $default  reduce using rule 59 (term)


State 41

   53 term: '(' . exp ')'

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 71
    term      go to state 47


State 42

   54 term: '!' . term

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    term      go to state 72


State 43

   55 term: '|' . exp '|'

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 73
    term      go to state 47


State 44

   60 term: string .

    $default  reduce using rule 60 (term)


State 45

   36 variable: variable . '[' exp ']'
   37         | variable . '.' tIDENTIFIER
   51 term: variable .

    '['  shift, and go to state 55
    '.'  shift, and go to state 56

    $default  reduce using rule 51 (term)


State 46

   26 statement: tRETURN exp . ';'
   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp

    tEQUALITY       shift, and go to state 74
    tLESSER_EQUAL   shift, and go to state 75
    tGREATER_EQUAL  shift, and go to state 76
    tNON_EQUALITY   shift, and go to state 77
    tAND            shift, and go to state 78
    tOR             shift, and go to state 79
    '<'             shift, and go to state 80
    '>'             shift, and go to state 81
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85
    ';'             shift, and go to state 86


State 47

   50 exp: term .

    $default  reduce using rule 50 (exp)


State 48

   27 statement: tWRITE exp . ';'
   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp

    tEQUALITY       shift, and go to state 74
    tLESSER_EQUAL   shift, and go to state 75
    tGREATER_EQUAL  shift, and go to state 76
    tNON_EQUALITY   shift, and go to state 77
    tAND            shift, and go to state 78
    tOR             shift, and go to state 79
    '<'             shift, and go to state 80
    '>'             shift, and go to state 81
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85
    ';'             shift, and go to state 87


State 49

   31 statement: tIF exp . tTHEN statement
   32          | tIF exp . tTHEN statement tELSE statement
   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp

    tEQUALITY       shift, and go to state 74
    tLESSER_EQUAL   shift, and go to state 75
    tGREATER_EQUAL  shift, and go to state 76
    tNON_EQUALITY   shift, and go to state 77
    tAND            shift, and go to state 78
    tOR             shift, and go to state 79
    tTHEN           shift, and go to state 88
    '<'             shift, and go to state 80
    '>'             shift, and go to state 81
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85


State 50

   28 statement: tALLOCATE variable . ';'
   29          | tALLOCATE variable . tOF tLENGTH exp ';'
   36 variable: variable . '[' exp ']'
   37         | variable . '.' tIDENTIFIER

    tOF  shift, and go to state 89
    ';'  shift, and go to state 90
    '['  shift, and go to state 55
    '.'  shift, and go to state 56


State 51

   33 statement: tWHILE exp . tDO statement
   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp

    tEQUALITY       shift, and go to state 74
    tLESSER_EQUAL   shift, and go to state 75
    tGREATER_EQUAL  shift, and go to state 76
    tNON_EQUALITY   shift, and go to state 77
    tAND            shift, and go to state 78
    tOR             shift, and go to state 79
    tDO             shift, and go to state 91
    '<'             shift, and go to state 80
    '>'             shift, and go to state 81
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85


State 52

   34 statement: '{' statement_list . '}'

    '}'  shift, and go to state 92


State 53

   25 statement_list: statement statement_list .

    $default  reduce using rule 25 (statement_list)


State 54

   30 statement: variable '=' . exp ';'

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 93
    term      go to state 47


State 55

   36 variable: variable '[' . exp ']'

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 94
    term      go to state 47


State 56

   37 variable: variable '.' . tIDENTIFIER

    tIDENTIFIER  shift, and go to state 95


State 57

    7 type: tIDENTIFIER .

    $default  reduce using rule 7 (type)


State 58

    9 type: tBOOL .

    $default  reduce using rule 9 (type)


State 59

   11 type: tARRAY . tOF type

    tOF  shift, and go to state 96


State 60

    8 type: tINT .

    $default  reduce using rule 8 (type)


State 61

   12 type: tRECORD . tOF '{' var_decl_list '}'

    tOF  shift, and go to state 97


State 62

   10 type: tSTRING_TOKEN .

    $default  reduce using rule 10 (type)


State 63

   21 declaration: tTYPE tIDENTIFIER '=' type . ';'

    ';'  shift, and go to state 98


State 64

    5 head: tFUNC tIDENTIFIER '(' par_decl_list . ')' ':' type

    ')'  shift, and go to state 99


State 65

   13 par_decl_list: var_decl_list .

    $default  reduce using rule 13 (par_decl_list)


State 66

   17 var_type: tIDENTIFIER ':' type .

    $default  reduce using rule 17 (var_type)


State 67

   15 var_decl_list: var_type ',' var_decl_list .

    $default  reduce using rule 15 (var_decl_list)


State 68

    6 tail: tEND tIDENTIFIER .

    $default  reduce using rule 6 (tail)


State 69

   52 term: tIDENTIFIER '(' . act_list ')'

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    $default  reduce using rule 62 (act_list)

    string    go to state 44
    variable  go to state 45
    exp       go to state 100
    term      go to state 47
    act_list  go to state 101
    exp_list  go to state 102


State 70

    3 string: tSTRING '+' . tSTRING

    tSTRING  shift, and go to state 103


State 71

   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp
   53 term: '(' exp . ')'

    tEQUALITY       shift, and go to state 74
    tLESSER_EQUAL   shift, and go to state 75
    tGREATER_EQUAL  shift, and go to state 76
    tNON_EQUALITY   shift, and go to state 77
    tAND            shift, and go to state 78
    tOR             shift, and go to state 79
    '<'             shift, and go to state 80
    '>'             shift, and go to state 81
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85
    ')'             shift, and go to state 104


State 72

   54 term: '!' term .

    $default  reduce using rule 54 (term)


State 73

   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp
   55 term: '|' exp . '|'

    tEQUALITY       shift, and go to state 74
    tLESSER_EQUAL   shift, and go to state 75
    tGREATER_EQUAL  shift, and go to state 76
    tNON_EQUALITY   shift, and go to state 77
    tAND            shift, and go to state 78
    tOR             shift, and go to state 79
    '<'             shift, and go to state 80
    '>'             shift, and go to state 81
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85
    '|'             shift, and go to state 105


State 74

   42 exp: exp tEQUALITY . exp

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 106
    term      go to state 47


State 75

   47 exp: exp tLESSER_EQUAL . exp

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 107
    term      go to state 47


State 76

   46 exp: exp tGREATER_EQUAL . exp

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 108
    term      go to state 47


State 77

   45 exp: exp tNON_EQUALITY . exp

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 109
    term      go to state 47


State 78

   44 exp: exp tAND . exp

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 110
    term      go to state 47


State 79

   43 exp: exp tOR . exp

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 111
    term      go to state 47


State 80

   49 exp: exp '<' . exp

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 112
    term      go to state 47


State 81

   48 exp: exp '>' . exp

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 113
    term      go to state 47


State 82

   40 exp: exp '+' . exp

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 114
    term      go to state 47


State 83

   41 exp: exp '-' . exp

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 115
    term      go to state 47


State 84

   38 exp: exp '*' . exp

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 116
    term      go to state 47


State 85

   39 exp: exp '/' . exp

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 117
    term      go to state 47


State 86

   26 statement: tRETURN exp ';' .

    $default  reduce using rule 26 (statement)


State 87

   27 statement: tWRITE exp ';' .

    $default  reduce using rule 27 (statement)


State 88

   31 statement: tIF exp tTHEN . statement
   32          | tIF exp tTHEN . statement tELSE statement

    tIDENTIFIER  shift, and go to state 17
    tRETURN      shift, and go to state 18
    tWRITE       shift, and go to state 19
    tIF          shift, and go to state 20
    tALLOCATE    shift, and go to state 21
    tWHILE       shift, and go to state 22
    '{'          shift, and go to state 23

    statement  go to state 118
    variable   go to state 26


State 89

   29 statement: tALLOCATE variable tOF . tLENGTH exp ';'

    tLENGTH  shift, and go to state 119


State 90

   28 statement: tALLOCATE variable ';' .

    $default  reduce using rule 28 (statement)


State 91

   33 statement: tWHILE exp tDO . statement

    tIDENTIFIER  shift, and go to state 17
    tRETURN      shift, and go to state 18
    tWRITE       shift, and go to state 19
    tIF          shift, and go to state 20
    tALLOCATE    shift, and go to state 21
    tWHILE       shift, and go to state 22
    '{'          shift, and go to state 23

    statement  go to state 120
    variable   go to state 26


State 92

   34 statement: '{' statement_list '}' .

    $default  reduce using rule 34 (statement)


State 93

   30 statement: variable '=' exp . ';'
   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp

    tEQUALITY       shift, and go to state 74
    tLESSER_EQUAL   shift, and go to state 75
    tGREATER_EQUAL  shift, and go to state 76
    tNON_EQUALITY   shift, and go to state 77
    tAND            shift, and go to state 78
    tOR             shift, and go to state 79
    '<'             shift, and go to state 80
    '>'             shift, and go to state 81
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85
    ';'             shift, and go to state 121


State 94

   36 variable: variable '[' exp . ']'
   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp

    tEQUALITY       shift, and go to state 74
    tLESSER_EQUAL   shift, and go to state 75
    tGREATER_EQUAL  shift, and go to state 76
    tNON_EQUALITY   shift, and go to state 77
    tAND            shift, and go to state 78
    tOR             shift, and go to state 79
    '<'             shift, and go to state 80
    '>'             shift, and go to state 81
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85
    ']'             shift, and go to state 122


State 95

   37 variable: variable '.' tIDENTIFIER .

    $default  reduce using rule 37 (variable)


State 96

   11 type: tARRAY tOF . type

    tIDENTIFIER    shift, and go to state 57
    tBOOL          shift, and go to state 58
    tARRAY         shift, and go to state 59
    tINT           shift, and go to state 60
    tRECORD        shift, and go to state 61
    tSTRING_TOKEN  shift, and go to state 62

    type  go to state 123


State 97

   12 type: tRECORD tOF . '{' var_decl_list '}'

    '{'  shift, and go to state 124


State 98

   21 declaration: tTYPE tIDENTIFIER '=' type ';' .

    $default  reduce using rule 21 (declaration)


State 99

    5 head: tFUNC tIDENTIFIER '(' par_decl_list ')' . ':' type

    ':'  shift, and go to state 125


State 100

   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp
   63 exp_list: exp .
   64         | exp . ',' exp_list

    tEQUALITY       shift, and go to state 74
    tLESSER_EQUAL   shift, and go to state 75
    tGREATER_EQUAL  shift, and go to state 76
    tNON_EQUALITY   shift, and go to state 77
    tAND            shift, and go to state 78
    tOR             shift, and go to state 79
    '<'             shift, and go to state 80
    '>'             shift, and go to state 81
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85
    ','             shift, and go to state 126

    $default  reduce using rule 63 (exp_list)


State 101

   52 term: tIDENTIFIER '(' act_list . ')'

    ')'  shift, and go to state 127


State 102

   61 act_list: exp_list .

    $default  reduce using rule 61 (act_list)


State 103

    3 string: tSTRING '+' tSTRING .

    $default  reduce using rule 3 (string)


State 104

   53 term: '(' exp ')' .

    $default  reduce using rule 53 (term)


State 105

   55 term: '|' exp '|' .

    $default  reduce using rule 55 (term)


State 106

   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   42    | exp tEQUALITY exp .
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp

    tLESSER_EQUAL   shift, and go to state 75
    tGREATER_EQUAL  shift, and go to state 76
    '<'             shift, and go to state 80
    '>'             shift, and go to state 81
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85

    $default  reduce using rule 42 (exp)


State 107

   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   47    | exp tLESSER_EQUAL exp .
   48    | exp . '>' exp
   49    | exp . '<' exp

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85

    $default  reduce using rule 47 (exp)


State 108

   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   46    | exp tGREATER_EQUAL exp .
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85

    $default  reduce using rule 46 (exp)


State 109

   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   45    | exp tNON_EQUALITY exp .
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp

    tLESSER_EQUAL   shift, and go to state 75
    tGREATER_EQUAL  shift, and go to state 76
    '<'             shift, and go to state 80
    '>'             shift, and go to state 81
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85

    $default  reduce using rule 45 (exp)


State 110

   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   44    | exp tAND exp .
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp

    tEQUALITY       shift, and go to state 74
    tLESSER_EQUAL   shift, and go to state 75
    tGREATER_EQUAL  shift, and go to state 76
    tNON_EQUALITY   shift, and go to state 77
    '<'             shift, and go to state 80
    '>'             shift, and go to state 81
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85

    $default  reduce using rule 44 (exp)


State 111

   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   43    | exp tOR exp .
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp

    tEQUALITY       shift, and go to state 74
    tLESSER_EQUAL   shift, and go to state 75
    tGREATER_EQUAL  shift, and go to state 76
    tNON_EQUALITY   shift, and go to state 77
    tAND            shift, and go to state 78
    '<'             shift, and go to state 80
    '>'             shift, and go to state 81
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85

    $default  reduce using rule 43 (exp)


State 112

   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp
   49    | exp '<' exp .

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85

    $default  reduce using rule 49 (exp)


State 113

   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   48    | exp '>' exp .
   49    | exp . '<' exp

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85

    $default  reduce using rule 48 (exp)


State 114

   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   40    | exp '+' exp .
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85

    $default  reduce using rule 40 (exp)


State 115

   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   41    | exp '-' exp .
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85

    $default  reduce using rule 41 (exp)


State 116

   38 exp: exp . '*' exp
   38    | exp '*' exp .
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp

    $default  reduce using rule 38 (exp)


State 117

   38 exp: exp . '*' exp
   39    | exp . '/' exp
   39    | exp '/' exp .
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp

    $default  reduce using rule 39 (exp)


State 118

   31 statement: tIF exp tTHEN statement .
   32          | tIF exp tTHEN statement . tELSE statement

    tELSE  shift, and go to state 128

    tELSE     [reduce using rule 31 (statement)]
    $default  reduce using rule 31 (statement)


State 119

   29 statement: tALLOCATE variable tOF tLENGTH . exp ';'

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 129
    term      go to state 47


State 120

   33 statement: tWHILE exp tDO statement .

    $default  reduce using rule 33 (statement)


State 121

   30 statement: variable '=' exp ';' .

    $default  reduce using rule 30 (statement)


State 122

   36 variable: variable '[' exp ']' .

    $default  reduce using rule 36 (variable)


State 123

   11 type: tARRAY tOF type .

    $default  reduce using rule 11 (type)


State 124

   12 type: tRECORD tOF '{' . var_decl_list '}'

    tIDENTIFIER  shift, and go to state 12

    var_decl_list  go to state 130
    var_type       go to state 14


State 125

    5 head: tFUNC tIDENTIFIER '(' par_decl_list ')' ':' . type

    tIDENTIFIER    shift, and go to state 57
    tBOOL          shift, and go to state 58
    tARRAY         shift, and go to state 59
    tINT           shift, and go to state 60
    tRECORD        shift, and go to state 61
    tSTRING_TOKEN  shift, and go to state 62

    type  go to state 131


State 126

   64 exp_list: exp ',' . exp_list

    tINTCONST    shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tTRUE        shift, and go to state 38
    tFALSE       shift, and go to state 39
    tNULL        shift, and go to state 40
    '('          shift, and go to state 41
    '!'          shift, and go to state 42
    '|'          shift, and go to state 43

    string    go to state 44
    variable  go to state 45
    exp       go to state 100
    term      go to state 47
    exp_list  go to state 132


State 127

   52 term: tIDENTIFIER '(' act_list ')' .

    $default  reduce using rule 52 (term)


State 128

   32 statement: tIF exp tTHEN statement tELSE . statement

    tIDENTIFIER  shift, and go to state 17
    tRETURN      shift, and go to state 18
    tWRITE       shift, and go to state 19
    tIF          shift, and go to state 20
    tALLOCATE    shift, and go to state 21
    tWHILE       shift, and go to state 22
    '{'          shift, and go to state 23

    statement  go to state 133
    variable   go to state 26


State 129

   29 statement: tALLOCATE variable tOF tLENGTH exp . ';'
   38 exp: exp . '*' exp
   39    | exp . '/' exp
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . tEQUALITY exp
   43    | exp . tOR exp
   44    | exp . tAND exp
   45    | exp . tNON_EQUALITY exp
   46    | exp . tGREATER_EQUAL exp
   47    | exp . tLESSER_EQUAL exp
   48    | exp . '>' exp
   49    | exp . '<' exp

    tEQUALITY       shift, and go to state 74
    tLESSER_EQUAL   shift, and go to state 75
    tGREATER_EQUAL  shift, and go to state 76
    tNON_EQUALITY   shift, and go to state 77
    tAND            shift, and go to state 78
    tOR             shift, and go to state 79
    '<'             shift, and go to state 80
    '>'             shift, and go to state 81
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85
    ';'             shift, and go to state 134


State 130

   12 type: tRECORD tOF '{' var_decl_list . '}'

    '}'  shift, and go to state 135


State 131

    5 head: tFUNC tIDENTIFIER '(' par_decl_list ')' ':' type .

    $default  reduce using rule 5 (head)


State 132

   64 exp_list: exp ',' exp_list .

    $default  reduce using rule 64 (exp_list)


State 133

   32 statement: tIF exp tTHEN statement tELSE statement .

    $default  reduce using rule 32 (statement)


State 134

   29 statement: tALLOCATE variable tOF tLENGTH exp ';' .

    $default  reduce using rule 29 (statement)


State 135

   12 type: tRECORD tOF '{' var_decl_list '}' .

    $default  reduce using rule 12 (type)
